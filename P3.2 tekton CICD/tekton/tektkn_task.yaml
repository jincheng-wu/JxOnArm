apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: task-tekton-loop
spec:
  resources:
    inputs:
      - name: task-input-tekton
        type: git
  steps:
    - name: go-build
      image: golang:1.15
      env:
        - name: "PATH"
          value: "/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
        - name: "GOPATH"
          value: "/go"
      script: |
        #!/bin/bash
        cd $(resources.inputs.task-input-tekton.path)
        make all
        storage_folder="/binary_dockerfile"
        mkdir $(resources.inputs.task-input-tekton.path)$storage_folder
        storage_path=$(resources.inputs.task-input-tekton.path)$storage_folder
        echo $storage_path
        image_tag=`grep image_tag arm_config|awk -F ":" '{print $2}'`
        for i in `grep build_image_info arm_config`;
        do
        binary_path=`echo  $i|awk -F ":" '{print $2}'|awk -F ";" '{print $1}'`;
        echo $binary_path;
        dockerfile_path=`echo  $i|awk -F ":" '{print $2}'|awk -F ";" '{print $2}'`;
        echo $dockerfile_path;
        image_name=`echo  $i|awk -F ":" '{print $2}'|awk -F ";" '{print $3}'`;
        echo $image_name;
        cp $(resources.inputs.task-input-tekton.path)$binary_path $storage_path
        echo $(resources.inputs.task-input-tekton.path)$binary_path
        cp $(resources.inputs.task-input-tekton.path)$dockerfile_path $storage_path/Dockerfile.$image_name
        done
